{"ast":null,"code":"/**\n * letterize.js v2.0.0\n * (c) 2021 Wojciech Krakowiak\n * Released under the MIT license\n * https://github.com/WojciechWKROPCE/letterize\n */\n\n/*jshint esversion: 6 */\nconst getTargets = targets => {\n  if (targets instanceof NodeList || targets instanceof HTMLCollection || Array.isArray(targets)) {\n    return targets;\n  } else if (targets instanceof HTMLElement) {\n    return [targets];\n  } else if (typeof targets === \"string\") {\n    return document.querySelectorAll(targets);\n  }\n  return null;\n};\nconst deconstructText = (node, wrapper, className) => {\n  const text = node.textContent.trim();\n  const textLength = text.length;\n  const list = [];\n  node.textContent = \"\";\n  for (let n = 0; n < textLength; n++) {\n    const letterNode = document.createElement(wrapper);\n    if (className && className.length) letterNode.classList.add(className);\n    // Replace spaces with &nbsp; so it has width after letterizing\n    letterNode.textContent = text[n] === \" \" ? \"\\xa0\" : text[n];\n    node.before(letterNode);\n    list.push(letterNode);\n  }\n  return list;\n};\nconst deconstructObjects = (targets, target, wrapper, className, list, listAll, i, id) => {\n  if (!Array.isArray(target.letterize_id)) {\n    target.letterize_id = [];\n  }\n  if (!target.letterize_id.includes(id)) {\n    target.letterize_id.push(id);\n    const nodeList = [...target.childNodes];\n    const nodeListLength = nodeList.length;\n    for (let j = 0; j < nodeListLength; j++) {\n      let listPart;\n      switch (nodeList[j].nodeType) {\n        case 1:\n          if (Array.prototype.indexOf.call(targets, nodeList[j]) === -1) {\n            // Check if current nodeList[j] wasn't deconstructed (it can happen if a target node is in another target node).\n            deconstructObjects(targets, nodeList[j], wrapper, className, list, listAll, i, id);\n          }\n          break;\n        case 3:\n          listPart = deconstructText(nodeList[j], wrapper, className);\n          listAll.push(...listPart);\n          list[i].push(...listPart);\n          break;\n      }\n    }\n  }\n};\nclass Letterize {\n  constructor(params) {\n    const targets = getTargets(params.targets);\n    if (!targets || !targets.length) {\n      console.error(`Letterize: targets '${targets}' not found or not specified`);\n      return;\n    }\n    const targetsLength = targets.length;\n    Letterize.numInstances = (Letterize.numInstances || 0) + 1;\n    const wrapper = params.wrapper || \"span\";\n    const className = params.className;\n    const id = Letterize.numInstances;\n    const list = [];\n    const listAll = [];\n    for (let i = 0; i < targetsLength; i++) {\n      list[i] = [];\n      deconstructObjects(targets, targets[i], wrapper, className, list, listAll, i, id);\n    }\n    this._wrapper = wrapper;\n    this._targets = targets;\n    this._list = list;\n    this._listAll = listAll;\n    this._className = className;\n  }\n  get listAll() {\n    return this._listAll;\n  }\n  get list() {\n    return this._list;\n  }\n  get targets() {\n    return this._targets;\n  }\n  get className() {\n    return this._className;\n  }\n  get wrapper() {\n    return this._wrapper;\n  }\n  deletterize() {\n    const listLength = this.listAll.length;\n    for (let i = 0; i < listLength; i++) {\n      this.listAll[i].before(...Array.from(this.listAll[i].childNodes));\n      this.listAll[i].remove();\n    }\n    this._wrapper = undefined;\n    this._targets = undefined;\n    this._list = undefined;\n    this._listAll = undefined;\n    this._className = undefined;\n    this.deletterize = undefined;\n  }\n}\nexport default Letterize;","map":{"version":3,"names":["getTargets","targets","NodeList","HTMLCollection","Array","isArray","HTMLElement","document","querySelectorAll","deconstructText","node","wrapper","className","text","textContent","trim","textLength","length","list","n","letterNode","createElement","classList","add","before","push","deconstructObjects","target","listAll","i","id","letterize_id","includes","nodeList","childNodes","nodeListLength","j","listPart","nodeType","prototype","indexOf","call","Letterize","constructor","params","console","error","targetsLength","numInstances","_wrapper","_targets","_list","_listAll","_className","deletterize","listLength","from","remove","undefined"],"sources":["/home/matti/Desktop/JEToP/readytoReact_live_coding/node_modules/letterizejs/lib/letterize.js"],"sourcesContent":["/**\n * letterize.js v2.0.0\n * (c) 2021 Wojciech Krakowiak\n * Released under the MIT license\n * https://github.com/WojciechWKROPCE/letterize\n */\n\n/*jshint esversion: 6 */\r\nconst getTargets = (targets) => {\r\n    if (targets instanceof NodeList ||\r\n        targets instanceof HTMLCollection ||\r\n        Array.isArray(targets)) {\r\n        return targets;\r\n    }\r\n    else if (targets instanceof HTMLElement) {\r\n        return [targets];\r\n    }\r\n    else if (typeof targets === \"string\") {\r\n        return document.querySelectorAll(targets);\r\n    }\r\n    return null;\r\n};\r\nconst deconstructText = (node, wrapper, className) => {\r\n    const text = node.textContent.trim();\r\n    const textLength = text.length;\r\n    const list = [];\r\n    node.textContent = \"\";\r\n    for (let n = 0; n < textLength; n++) {\r\n        const letterNode = document.createElement(wrapper);\r\n        if (className && className.length)\r\n            letterNode.classList.add(className);\r\n        // Replace spaces with &nbsp; so it has width after letterizing\r\n        letterNode.textContent = text[n] === \" \" ? \"\\xa0\" : text[n];\r\n        node.before(letterNode);\r\n        list.push(letterNode);\r\n    }\r\n    return list;\r\n};\r\nconst deconstructObjects = (targets, target, wrapper, className, list, listAll, i, id) => {\r\n    if (!Array.isArray(target.letterize_id)) {\r\n        target.letterize_id = [];\r\n    }\r\n    if (!target.letterize_id.includes(id)) {\r\n        target.letterize_id.push(id);\r\n        const nodeList = [...target.childNodes];\r\n        const nodeListLength = nodeList.length;\r\n        for (let j = 0; j < nodeListLength; j++) {\r\n            let listPart;\r\n            switch (nodeList[j].nodeType) {\r\n                case 1:\r\n                    if (Array.prototype.indexOf.call(targets, nodeList[j]) === -1) {\r\n                        // Check if current nodeList[j] wasn't deconstructed (it can happen if a target node is in another target node).\r\n                        deconstructObjects(targets, nodeList[j], wrapper, className, list, listAll, i, id);\r\n                    }\r\n                    break;\r\n                case 3:\r\n                    listPart = deconstructText(nodeList[j], wrapper, className);\r\n                    listAll.push(...listPart);\r\n                    list[i].push(...listPart);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n};\r\nclass Letterize {\r\n    constructor(params) {\r\n        const targets = getTargets(params.targets);\r\n        if (!targets || !targets.length) {\r\n            console.error(`Letterize: targets '${targets}' not found or not specified`);\r\n            return;\r\n        }\r\n        const targetsLength = targets.length;\r\n        Letterize.numInstances = (Letterize.numInstances || 0) + 1;\r\n        const wrapper = params.wrapper || \"span\";\r\n        const className = params.className;\r\n        const id = Letterize.numInstances;\r\n        const list = [];\r\n        const listAll = [];\r\n        for (let i = 0; i < targetsLength; i++) {\r\n            list[i] = [];\r\n            deconstructObjects(targets, targets[i], wrapper, className, list, listAll, i, id);\r\n        }\r\n        this._wrapper = wrapper;\r\n        this._targets = targets;\r\n        this._list = list;\r\n        this._listAll = listAll;\r\n        this._className = className;\r\n    }\r\n    get listAll() {\r\n        return this._listAll;\r\n    }\r\n    get list() {\r\n        return this._list;\r\n    }\r\n    get targets() {\r\n        return this._targets;\r\n    }\r\n    get className() {\r\n        return this._className;\r\n    }\r\n    get wrapper() {\r\n        return this._wrapper;\r\n    }\r\n    deletterize() {\r\n        const listLength = this.listAll.length;\r\n        for (let i = 0; i < listLength; i++) {\r\n            this.listAll[i].before(...Array.from(this.listAll[i].childNodes));\r\n            this.listAll[i].remove();\r\n        }\r\n        this._wrapper = undefined;\r\n        this._targets = undefined;\r\n        this._list = undefined;\r\n        this._listAll = undefined;\r\n        this._className = undefined;\r\n        this.deletterize = undefined;\r\n    }\r\n}\n\nexport default Letterize;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}